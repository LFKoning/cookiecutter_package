# Trigger on branches
trigger:
- master

# Python versions to test
pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

# Install all development dependencies
- script: |
    python -m pip install --upgrade pip
    python -m pip install --upgrade black isort pylint pytest pytest-cov pytest-azurepipelines
  displayName: 'Installing development dependencies'

# Install the project package
- script: |
    python -m pip install -e .
  displayName: 'Installing project package'

# Run isort on src
- script: |
    python -m isort src/
  displayName: 'Sorting imports with isort'
  enabled: true
  continueOnError: false

# Run auto-formatter on src
- script: |
    python -m black src/
  displayName: 'Running autoformatter black'
  enabled: true
  continueOnError: false

# Run linting on src
- script: |
    python -m pylint src/
  displayName: 'Running linting with pylint'
  enabled: true
  continueOnError: false

# Run unit tests and compute test coverage
- script: |
    python -m pytest --ignore=docs/ --cov=src/ --cov-report=xml tests/
  displayName: 'Running tests with pytest'
  enabled: true
  continueOnError: false

# Format and publish coverage report
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Cobertura Coverage Report'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/coverage.xml'
    failIfCoverageEmpty: false